"""
Django settings for mdccBackend project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'k812lpl3b(5mog2w0kj8fty6raw#m+z(1326fvoo^c4(b-x5xp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['mdcc.cas.mcmaster.ca']
AUTH_USER_MODEL = 'accounts.MyUser'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'accounts',
    'datacollection',
    'webEnd',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    )
}
MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
#    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mdccBackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "static/")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mdccBackend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Email settings

DEFAULT_EMAIL_FROM = 'splashmonitoring7@gmail.com'
DEFAULT_EMAIL_BCC = ''
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'splashmonitoring7@gmail.com'
EMAIL_HOST_PASSWORD = 'Liu433@m'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
SERVER_EMAIL = 'splashmonitoring7@gmail.com'



# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'


TIME_ZONE = 'EST'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "accounts/templates/"),
    os.path.join(BASE_DIR, "datacollection/templates/"),
    ]


#logging part

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,  
    'formatters': {
        'simple': {
            'format': '%(levelname)s %(asctime)s %(message)s',
            },
        },
    'handlers': {
        'file_anyerror': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/allErrors_debug.log'),
            'formatter': 'simple'
            },
        'file_requestsInfo':{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/fpDataRequest.log'),
            'formatter': 'simple'
            },
        'file_collectlog':{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/collectLog.log'),
            'formatter': 'simple'
            },
        'file_taskslog':{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/tasksLog.log'),
            'formatter': 'simple'
            },
        'file_userFeedback':{
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/userFeedback.log'),
            'formatter': 'simple'
            },
        },
    'loggers': {
        'django': {
            'handlers': ['file_anyerror'],
            'level': 'DEBUG',
            'propagate': True,
            },
        'fpDataRequest':{
            'handlers': ['file_requestsInfo'],
            'level': 'DEBUG',
            'propagate': False,
            },
        'collectLog':{
            'handlers': ['file_collectlog'],
            'level': 'DEBUG',
            'propagate': False,
            },
        'tasksLog':{
            'handlers': ['file_taskslog'],
            'level': 'DEBUG',
            'propagate': False,
            },
        'userFeedback':{
            'handlers': ['file_userFeedback'],
            'level': 'DEBUG',
            'propagate': False,
            },
        },
}

